import asyncio
import logging
import sys
import secrets
from pathlib import Path
from dotenv import dotenv_values

from aiogram import Bot, Dispatcher, html
from aiogram.utils.markdown import hlink
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram import types

settings = dotenv_values()

dp = Dispatcher()
bot = Bot(token=settings.get("BOT_API_TOKEN"), default=DefaultBotProperties(parse_mode=ParseMode.HTML))


welcome_text = f""", —Ä–∞–¥—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É üôè\n
–ú—ã ‚Äî {html.bold('–ú–∞—Å—Ç–µ—Ä –∏ –°–∫–∞–π—è')}, –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∏ –≤ –º–∏—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏.\n
–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–±—â–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π —á–∞—â–µ –∏ –∑–Ω–∞—Ç—å, –≤ –∫–∞–∫–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ —Ç—ã —Å–µ–≥–æ–¥–Ω—è.\n
–ù–∏–∂–µ —Ç—ã –≤–∏–¥–∏—à—å –º–µ–Ω—é, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Å–º–æ–∂–µ—à—å —É—Ö–≤–∞—Ç–∏—Ç—å –ø–æ—Ä—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –º—ã—Å–ª–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.\n
–¢–∞–∫–∂–µ, –≤ {hlink('–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ', 'https://t.me/masterskayadialogov')} —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ ‚òëÔ∏è\n
–ß—É–≤—Å—Ç–≤—É–π, –≤—ã–±–∏—Ä–∞–π –∏ –Ω–∞–∂–∏–º–∞–π. –ò –º—ã –ø—Ä–∏—à–ª–µ–º —Ç–µ–±–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏ üí≠\n
"""


@dp.message(
    lambda message: message.text in (
        "–ú–æ—Ç–∏–≤–∞—Ü–∏—è", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", "–õ—é–±–æ–≤—å", "–Æ–º–æ—Ä"
    )
)
async def button1_handler(message: types.Message):
    memes = {
        "–ú–æ—Ç–∏–≤–∞—Ü–∏—è": "motivation",
        "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è": "psychology",
        "–õ—é–±–æ–≤—å": "love",
        "–Æ–º–æ—Ä": "humour",
    }
    folder_path = Path(f'src/pictures/memes/{memes[message.text]}/')
    files = list(folder_path.glob('*.*'))
    start_picture = FSInputFile(secrets.choice(files))
    await bot.send_photo(
        chat_id=message.chat.id,
        photo=start_picture,
    )


@dp.message(
    lambda message: message.text == "–ù–∞—á–∞–ª–æ"
)
async def start_button_handler(message: types.Message):
    await command_start_handler(message=message)


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    This handler receives messages with `/start` command
    """
    start_picture = FSInputFile("src/pictures/project/start.png")
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="–ú–æ—Ç–∏–≤–∞—Ü–∏—è"),
        KeyboardButton(text="–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è"),
    )
    builder.row(
        KeyboardButton(text="–õ—é–±–æ–≤—å"),
        KeyboardButton(text="–Æ–º–æ—Ä"),
    )
    builder.row(
        KeyboardButton(text="–ù–∞—á–∞–ª–æ"),
    )
    await bot.send_photo(
        chat_id=message.chat.id,
        photo=start_picture,
        caption=html.bold(message.from_user.full_name) + welcome_text,
        reply_markup=builder.as_markup(
            resize_keyboard=True
        ),
    )


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(dp.start_polling(bot))
